const Mixin=t=>{const e=new WeakSet;return s=>{let i=s;for(;null!=i;){if(e.has(i))return s;i=Object.getPrototypeOf(i)}const n=t(s);return e.add(n),n}},BaseMixin=Mixin(t=>(class extends t{toggleAttribute(t,e){return null!=e?e?this.setAttribute(t,""):this.removeAttribute(t):this.hasAttribute(t)?this.removeAttribute(t):this.setAttribute(t,""),e||this.hasAttribute(t)}})),connector=t=>{const e=new WeakMap;return(s,i)=>(class extends s{connectedCallback(){const{selectors:s,actions:n}=i;if(s){const i=()=>Object.assign(this,s(t.getState())),n=t.subscribe(i);e.set(this,n),i()}if(n){const e=n(t.dispatch);for(const t in e)this.addEventListener(t,s=>{s.stopImmediatePropagation(),e[t](s.detail)})}super.connectedCallback&&super.connectedCallback()}disconnectedCallback(){if(i.selectors){e.get(this)()}super.disconnectedCallback&&super.disconnectedCallback()}})},PropertyChangedMixin=Mixin(t=>{const e=new WeakMap,s=new WeakSet;return class extends t{static setup(){if(s.has(this))return;const t=this.prototype,i=this.properties;if(void 0===i)return;const n=Object.keys(i);for(const s of n){function r(){return e.get(this)[s]}function o(t){const i=e.get(this)[s];e.get(this)[s]=t,this.propertyChangedCallback(s,i,t)}s in t||Object.defineProperty(t,s,{configurable:!0,enumerable:!0,get:r,set:o})}s.add(this)}constructor(){super(),e.set(this,{}),this.constructor.setup()}connectedCallback(){const t=this.constructor.properties,e=Object.keys(t);for(const t of e){if(!this.hasOwnProperty(t))continue;const e=this[t];delete this[t],this[t]=e}super.connectedCallback&&super.connectedCallback()}propertyChangedCallback(t,e,s){}set(t){const s=Object.entries(t),i={},n=e.get(this);for(const[t,e]of s)i[t]=n[t],n[t]=e;for(const[t,e]of s){const s=i[t];this.propertyChangedCallback(t,s,e)}}}}),PropertyObserverMixin=Mixin(t=>{const e=PropertyChangedMixin(t);return class extends e{propertyChangedCallback(t,e,s){super.propertyChangedCallback(t,e,s);const i=this.constructor.properties[t].observer;null!=i&&this[i](s,e)}}});function toDashCase(t){return t.replace(/([a-zA-Z])(?=[A-Z])/g,"$1-").toLowerCase()}const PropertyReflectionMixin=Mixin(t=>{const e=PropertyChangedMixin(t),s=new Map,i=new WeakSet;return class extends e{static setup(){if(super.setup(),i.has(this))return;const t=this.properties;if(void 0===t)return;const e=Object.keys(t);for(const i of e){if(t[i].reflectToAttribute){const t=toDashCase(i);s.set(i,t)}}i.add(this)}propertyChangedCallback(t,e,i){if(super.propertyChangedCallback(t,e,i),e===i)return;const n=this.constructor.properties[t],r=n.type;if(n.reflectToAttribute){const e=s.get(t);!1===i?this.removeAttribute(e):r===Boolean?this.setAttribute(e,""):this.setAttribute(e,i)}}}}),PropertyDefaultMixin=Mixin(t=>{const e=PropertyChangedMixin(t);return class extends e{connectedCallback(){super.connectedCallback();const t=this.constructor.properties;if(void 0===t)return;const e=Object.keys(t);for(const s of e){if(null!=this[s])continue;const e=t[s];null!=e.default&&(this[s]=e.default())}}}}),PropertiesMixin=Mixin(t=>{const e=PropertyDefaultMixin(PropertyReflectionMixin(PropertyObserverMixin(PropertyChangedMixin(t))));return class extends e{}}),ControlMixin=Mixin(t=>{const e=PropertiesMixin(BaseMixin(t)),s=Symbol(),i=Symbol();return class extends e{static get properties(){return Object.assign({},super.properties,{role:{type:String,reflectToAttribute:!0},name:{type:String,reflectToAttribute:!0},value:{type:String,reflectToAttribute:!0,observer:s},required:{type:Boolean,reflectToAttribute:!0,observer:i}})}constructor(){super(),this.required=!1}get valid(){return null!=this.value||!this.required}[s](t,e){t!==e&&(this.setAttribute("aria-invalid",!this.valid),this.toggleAttribute("valid",this.valid))}[i](t,e){t!==e&&(this.setAttribute("aria-required",t),this.setAttribute("aria-invalid",!this.valid),this.toggleAttribute("valid",this.valid))}}}),FocusMixin=Mixin(t=>{const e=PropertiesMixin(BaseMixin(t)),s=Symbol();return class extends e{static get properties(){return Object.assign({},super.properties,{disabled:{type:Boolean,reflectToAttribute:!0,observer:s},focused:{type:Boolean,reflectToAttribute:!0}})}constructor(){super(),this.focused=!1,this.disabled=!1}[s](t,e){t!==e&&(this.setAttribute("aria-disabled",String(t)),t?(this.removeAttribute("tabindex"),this.blur()):this.setAttribute("tabindex","0"))}focus(){this.disabled||(super.focus(),this.focused=!0,this.dispatchEvent(new FocusEvent("focus")),this.dispatchEvent(new FocusEvent("focusin",{bubbles:!0})))}blur(){this.disabled||(super.blur(),this.focused=!1,this.dispatchEvent(new FocusEvent("blur")),this.dispatchEvent(new FocusEvent("focusout",{bubbles:!0})))}}}),StaticTemplateMixin=Mixin(t=>{const e=new WeakSet;return class extends t{connectedCallback(){const t=this.constructor.template;if(null!=t&&!e.has(this)){null==this.shadowRoot&&this.attachShadow({mode:"open"});const s=t.content.cloneNode(!0);this.shadowRoot.appendChild(s),e.add(this)}super.connectedCallback&&super.connectedCallback()}}});function sanitize(t){return t instanceof HTMLTemplateElement?t.innerHTML:String(t)}function html(t,...e){const s=t.raw,i=document.createElement("template");return i.innerHTML=e.reduce((t,e,i)=>t+sanitize(e)+s[i+1],s[0]),i}const ShadyTemplateMixin=Mixin(t=>{const e=StaticTemplateMixin(t),s=new WeakSet,i=window.ShadyCSS,n=i&&(!i.nativeShadow||!i.nativeCss);return class extends e{static prepareTemplate(t){n&&(s.has(this)||(i.prepareTemplate(this.template,t),s.add(this)))}constructor(){super();const t=this.localName.toLowerCase();this.constructor.prepareTemplate(t)}connectedCallback(){super.connectedCallback(),n&&i.styleElement(this)}}}),ToggleMixin=Mixin(t=>{const e=PropertiesMixin(BaseMixin(t)),s=Symbol(),i=Symbol(),n=Symbol();return class extends e{static get properties(){return Object.assign({},super.properties,{checked:{type:Boolean,reflectToAttribute:!0,observer:n}})}constructor(){super(),this.checked=!1,this[s]=this[s].bind(this),this[i]=this[i].bind(this)}[n](t,e){t!==e&&(this.setAttribute("aria-checked",String(t)),this.dispatchEvent(new Event("input",{bubbles:!0})))}connectedCallback(){this.addEventListener("click",this[s]),this.addEventListener("keydown",this[i]),super.connectedCallback&&super.connectedCallback()}toggle(){this.disabled||(this.checked=!this.checked)}[s](){this.disabled||(this.toggle(),this.dispatchEvent(new Event("change",{bubbles:!0})))}[i](t){if(!this.disabled)switch(t.key){case"Enter":case" ":this.toggle(),this.dispatchEvent(new Event("change",{bubbles:!0}));break;default:return}}}});export{BaseMixin,connector,ControlMixin,FocusMixin,PropertiesMixin,PropertyChangedMixin,PropertyDefaultMixin,PropertyObserverMixin,PropertyReflectionMixin,ShadyTemplateMixin,StaticTemplateMixin,html,ToggleMixin};
