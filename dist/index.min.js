const Mixin=e=>{const t=new WeakSet;return s=>{let i=s;for(;null!=i;){if(t.has(i))return s;i=Object.getPrototypeOf(i)}const r=e(s);return t.add(r),r}},BaseMixin=Mixin(e=>(class extends e{emit(e,t,s){const i={bubbles:!0,cancelable:!0,detail:t},r=Object.assign(i,s);return this.dispatchEvent(new CustomEvent(e,r))}toggleAttribute(e,t){return null!=t?t?this.setAttribute(e,""):this.removeAttribute(e):this.hasAttribute(e)?this.removeAttribute(e):this.setAttribute(e,""),t||this.hasAttribute(e)}}));function isSerializableType(e){return e===String||e===Number||e===Boolean}function toDashCase(e){return e.replace(/([a-zA-Z])(?=[A-Z])/g,"$1-").toLowerCase()}const finalized=new WeakSet,attributeToProperty=new Map,propertyToAttribute=new Map,AttributeMixin=Mixin(e=>{const t=BaseMixin(e);return class extends t{static get observedAttributes(){const e=this.properties||{};return Object.keys(e).filter(t=>isSerializableType(e[t].type)).map(e=>toDashCase(e))}static setup(){if(super.setup(),finalized.has(this))return;const{properties:e}=this,t=Object.keys(e);for(const s of t){const{type:t,reflectToAttribute:i}=e[s];if(i||!1!==i&&isSerializable(t)){const e=toDashCase(s);propertyToAttribute.set(s,e),attributeToProperty.set(e,s)}}finalized.add(this)}connectedCallback(){const{constructor:e}=this,{properties:t}=e,s=Object.keys(t);for(const e of s){let t=null==this[e];const s=propertyToAttribute.get(e)||toDashCase(e);if(t&&this.hasAttribute(s)){const t=this.deserialize(s);null!=t&&(this[e]=t)}}super.connectedCallback&&super.connectedCallback()}set(e,t){super.set(e,t),!1!==this.constructor.properties[e].reflectToAttribute&&this.serialize(e,t)}serialize(e,t){const s=propertyToAttribute.get(e)||toDashCase(e),{type:i}=this.constructor.properties[e];if(null!=i&&isSerializableType(i))switch(i){case String:case Number:this.setAttribute(s,t);break;case Boolean:this.toggleAttribute(s,t)}}deserialize(e){const t=attributeToProperty.get(e),{type:s}=this.constructor.properties[t];if(null!=s&&isSerializableType(s))switch(s){case String:return this.getAttribute(e);case Number:return Number(this.getAttribute(e));case Boolean:return this.hasAttribute(e);default:return JSON.parse(this.getAttribute(e))}}attributeChangedCallback(e,t,s){const i=attributeToProperty.get(e),r=this.constructor.properties;if(null!=i&&null!=r[i]&&t!==s){const{type:e}=r[i];let t;switch(e){case String:t=s;break;case Number:t=Number(s);break;case Boolean:t=null!=s}this[i]=t}super.attributeChangedCallback&&super.attributeChangedCallback(e,t,s)}}}),connector=e=>{const t=new WeakMap;return(s,i)=>(class extends s{connectedCallback(){const{selectors:s,actions:r}=i;if(s){const i=()=>Object.assign(this,s(e.getState())),r=e.subscribe(i);t.set(this,r),i()}if(r){const t=r(e.dispatch);for(const e in t)this.addEventListener(e,s=>{s.stopImmediatePropagation(),t[e](s.detail)})}super.connectedCallback&&super.connectedCallback()}disconnectedCallback(){if(i.selectors){t.get(this)()}super.disconnectedCallback&&super.disconnectedCallback()}})},ControlMixin=Mixin(e=>{const t=BaseMixin(e);return class extends t{static get observedAttributes(){return Array.from(new Set(super.observedAttributes).add("valid").add("required"))}set role(e){this.setAttribute("role",e)}get role(){return this.getAttribute("role")}set name(e){this.setAttribute("name",e)}get name(){return this.getAttribute("name")}set value(e){this.setAttribute("value",e),this.toggleAttribute("valid",this.valid)}get value(){return this.getAttribute("value")}set required(e){this.toggleAttribute("required",e),this.toggleAttribute("valid",this.valid)}get required(){return this.hasAttribute("required")}get valid(){return null!=this.value||!this.required}attributeChangedCallback(e,t,s){const i=null!=s;switch(e){case"valid":this.setAttribute("aria-invalid",!i);break;case"required":this.setAttribute("aria-required",i)}super.attributeChangedCallback&&super.attributeChangedCallback(e,t,s)}connectedCallback(){this.setAttribute("aria-invalid",!this.valid),this.setAttribute("aria-required",this.required),super.connectedCallback&&super.connectedCallback()}}}),FocusMixin=Mixin(e=>{const t=BaseMixin(e),s=Symbol(),i=Symbol();return class extends t{static get observedAttributes(){return Array.from(new Set(super.observedAttributes).add("disabled"))}set disabled(e){this.toggleAttribute("disabled",e)}get disabled(){return this.hasAttribute("disabled")}set focused(e){this.toggleAttribute("focused",e)}get focused(){return this.hasAttribute("focused")}attributeChangedCallback(e,t,s){if("disabled"===e){const e=null!=s;this.setAttribute("aria-disabled",e),e?(this.removeAttribute("tabindex"),this.blur()):this.setAttribute("tabindex","0")}super.attributeChangedCallback&&super.attributeChangedCallback(e,t,s)}connectedCallback(){this.addEventListener("focus",this[s].bind(this)),this.addEventListener("blur",this[i].bind(this)),this.hasAttribute("tabindex")||this.disabled||this.setAttribute("tabindex","0"),super.connectedCallback&&super.connectedCallback()}focus(){this.disabled||(super.focus(),this.dispatchEvent(new Event("focus")))}[s](){this.disabled||(this.focused=!0)}blur(){this.disabled||(super.blur(),this.dispatchEvent(new Event("blur")))}[i](){this.disabled||(this.focused=!1)}}}),finalized$1=new WeakSet,properties=new WeakMap,PropertyAccessorsMixin=Mixin(e=>(class extends e{static setup(){if(finalized$1.has(this))return;const e=this.prototype,t=Object.keys(this.properties);for(const s of t)Object.defineProperty(e,s,{configurable:!0,enumerable:!0,get:function(){return this.get(s)},set:function(e){this.set(s,e)}});finalized$1.add(this)}constructor(){super(),this.constructor.setup(),properties.set(this,{})}set(e,t){properties.get(this)[e]=t}get(e){return properties.get(this)[e]}connectedCallback(){const{constructor:e}=this,{properties:t}=e,s=Object.keys(t);for(const e of s){const{required:s}=t[e];null==this[e]&&t[e].hasOwnProperty("default")?this[e]=t[e].default.call(this):s&&console.warn(`Required property '${e}' was not passed down to`,this)}super.connectedCallback&&super.connectedCallback()}})),finalized$2=new WeakSet,observedProperties=new WeakMap,batches=new WeakMap,debouncers=new WeakMap,PropertiesChangedMixin=Mixin(e=>{const t=PropertyAccessorsMixin(e);return class extends t{static setup(){if(!finalized$2.has(this)){if(super.setup(),this.observedProperties)observedProperties.set(this,new Set(this.observedProperties));else{const{properties:e}=this;observedProperties.set(this,new Set(Object.keys(e).filter(t=>!1!==e[t].observe)))}finalized$2.add(this)}}constructor(){super(),this.constructor.setup(),batches.set(this,{})}set(e,t){const s=this.get(e);if(super.set(e,t),!observedProperties.get(this.constructor).has(e))return;const i=batches.get(this);null!=i[e]?i[e].newValue=t:i[e]={name:e,oldValue:s,newValue:t},clearTimeout(debouncers.get(this)),debouncers.set(this,setTimeout(()=>{this.propertiesChangedCallback(i),batches.set(this,{})},1))}propertiesChangedCallback(e){}flushPropertyChanges(){clearTimeout(debouncers.get(this)),debouncers.delete(this),this.propertiesChangedCallback(batches.get(this)),batches.set(this,{})}}}),finalized$3=new WeakSet,observedProperties$1=new WeakMap,PropertyChangedMixin=Mixin(e=>{const t=PropertyAccessorsMixin(e);return class extends t{static setup(){if(super.setup(),!finalized$3.has(this)){if(this.observedProperties)observedProperties$1.set(this,new Set(this.observedProperties));else{const e=this.properties;observedProperties$1.set(this,new Set(Object.keys(e).filter(t=>!1!==e[t].observe)))}finalized$3.add(this)}}constructor(){super(),this.constructor.setup()}set(e,t){const s=this[e];super.set(e,t);const{constructor:i}=this;observedProperties$1.get(i).has(e)&&this.propertyChangedCallback(e,s,t)}propertyChangedCallback(e,t,s){}}}),StaticTemplateMixin=Mixin(e=>(class extends e{constructor(){super(),this.constructor.hasOwnProperty("template")&&this.attachShadow({mode:"open"})}connectedCallback(){const e=this.constructor;if(e.hasOwnProperty("template")){const t=e.template.content;this.shadowRoot.appendChild(t.cloneNode(!0))}super.connectedCallback&&super.connectedCallback()}}));function sanitize(e){return e instanceof HTMLTemplateElement?e.innerHTML:String(e)}function html(e,...t){const s=e.raw,i=document.createElement("template");return i.innerHTML=t.reduce((e,t,i)=>e+sanitize(t)+s[i+1],s[0]),i}const ShadyCSS=window.ShadyCSS,emulated=ShadyCSS&&(!ShadyCSS.nativeShadow||!ShadyCSS.nativeCss),finalized$4=new WeakSet,ShadyTemplateMixin=Mixin(e=>{const t=StaticTemplateMixin(e);return class extends t{constructor(){super();const e=this.constructor;e.template&&!finalized$4.has(e)&&(emulated&&ShadyCSS.prepareTemplate(e.template,this.localName),finalized$4.add(e))}connectedCallback(){super.connectedCallback(),finalized$4.has(this.constructor)&&emulated&&ShadyCSS.styleElement(this)}}}),onClick=Symbol(),onKeydown=Symbol(),ToggleMixin=Mixin(e=>{const t=BaseMixin(e);return class extends t{static get observedAttributes(){return Array.from(new Set(super.observedAttributes).add("checked"))}constructor(){super(),this[onClick]=this[onClick].bind(this),this[onKeydown]=this[onKeydown].bind(this)}set checked(e){const t=new CustomEvent("input",{bubbles:!0,cancelable:!0,detail:{checked:e,value:this.value}});this.dispatchEvent(t)&&(this.toggleAttribute("checked",e),this.valid=!this.required||e)}get checked(){return this.hasAttribute("checked")}attributeChangedCallback(e,t,s){if("checked"===e){const e=null!=s;this.setAttribute("aria-checked",e)}super.attributeChangedCallback&&super.attributeChangedCallback(e,t,s)}connectedCallback(){this.setAttribute("aria-checked",this.checked),this.addEventListener("click",this[onClick]),this.addEventListener("keydown",this[onKeydown]),super.connectedCallback&&super.connectedCallback()}toggle(){this.disabled||(this.checked=!this.checked)}[onClick](){this.disabled||(this.toggle(),this.dispatchEvent(new CustomEvent("change",{bubbles:!0})))}[onKeydown](e){if(!this.disabled)switch(e.key){case"Enter":case" ":this.toggle(),this.dispatchEvent(new CustomEvent("change",{bubbles:!0}));break;default:return}}}});export{AttributeMixin,BaseMixin,connector,ControlMixin,FocusMixin,PropertiesChangedMixin,PropertyAccessorsMixin,PropertyChangedMixin,ShadyTemplateMixin,StaticTemplateMixin,html,ToggleMixin};
