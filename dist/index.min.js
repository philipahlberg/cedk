const Mixin=t=>{const e=new WeakSet;return s=>{let r=s;for(;null!=r;){if(e.has(r))return s;r=Object.getPrototypeOf(r)}const i=t(s);return e.add(i),i}};function toDashCase(t){return t.replace(/([a-zA-Z])(?=[A-Z])/g,"$1-").toLowerCase()}const Attributes=Mixin(t=>{const e=new Map,s=new WeakSet,r=new Set;return class extends t{static get observedAttributes(){const t=super.observedAttributes,e=this.properties||{};return Object.keys(e).map(t=>toDashCase(t)).concat(t)}static setup(){if(s.has(this))return;null!=super.setup&&super.setup();const t=this.properties;if(void 0===t)return;const r=Object.keys(t);for(const t of r){if(e.has(t))continue;const s=toDashCase(t);e.set(s,t)}s.add(this)}constructor(){super(),this.constructor.setup()}attributeChangedCallback(t,s,i){if(null!=super.attributeChangedCallback&&super.attributeChangedCallback(t,s,i),s===i)return;if(r.has(this))return;if(!e.has(t))return;const n=this.constructor.properties,o=e.get(t);switch(n[o].type){case String:this[o]=i;break;case Boolean:this[o]=null!=i;break;default:this[o]=JSON.parse(i)}}propertyChangedCallback(t,e,s){r.add(this),super.propertyChangedCallback(t,e,s),r.delete(this)}}}),Base=Mixin(t=>(class extends t{toggleAttribute(t,e){return null!=e?e?this.setAttribute(t,""):this.removeAttribute(t):this.hasAttribute(t)?this.removeAttribute(t):this.setAttribute(t,""),e||this.hasAttribute(t)}})),connector=t=>{const e=new WeakMap;return(s,r)=>(class extends s{connectedCallback(){const{selectors:s,actions:i}=r;if(s){const r=()=>Object.assign(this,s(t.getState())),i=t.subscribe(r);e.set(this,i),r()}if(i){const e=i(t.dispatch);for(const t in e)this.addEventListener(t,s=>{s.stopImmediatePropagation(),e[t](s.detail)})}super.connectedCallback&&super.connectedCallback()}disconnectedCallback(){if(r.selectors){e.get(this)()}super.disconnectedCallback&&super.disconnectedCallback()}})},PropertyChanged=Mixin(t=>{const e=new WeakMap,s=new WeakSet;return class extends t{static setup(){if(s.has(this))return;const t=this.prototype,r=this.properties;if(void 0===r)return;const i=Object.keys(r);for(const s of i){function n(){return e.get(this)[s]}function o(t){const r=e.get(this)[s];e.get(this)[s]=t,this.propertyChangedCallback(s,r,t)}s in t||Object.defineProperty(t,s,{configurable:!0,enumerable:!0,get:n,set:o})}s.add(this)}constructor(){super(),e.set(this,{}),this.constructor.setup()}connectedCallback(){const t=this.constructor.properties,e=Object.keys(t);for(const t of e){if(!this.hasOwnProperty(t))continue;const e=this[t];delete this[t],this[t]=e}super.connectedCallback&&super.connectedCallback()}propertyChangedCallback(t,e,s){}set(t){const s=Object.entries(t),r={},i=e.get(this);for(const[t,e]of s)r[t]=i[t],i[t]=e;for(const[t,e]of s){const s=r[t];this.propertyChangedCallback(t,s,e)}}}}),PropertyObserver=Mixin(t=>{const e=PropertyChanged(t);return class extends e{propertyChangedCallback(t,e,s){super.propertyChangedCallback(t,e,s);const r=this.constructor.properties[t].observer;null!=r&&this[r](s,e)}}}),PropertyReflection=Mixin(t=>{const e=PropertyChanged(t),s=new Map,r=new WeakSet;return class extends e{static setup(){if(super.setup(),r.has(this))return;const t=this.properties;if(void 0===t)return;const e=Object.keys(t);for(const r of e){if(t[r].reflectToAttribute){if(s.has(r))continue;const t=toDashCase(r);s.set(r,t)}}r.add(this)}propertyChangedCallback(t,e,r){if(super.propertyChangedCallback(t,e,r),e===r)return;const i=this.constructor.properties[t],n=i.type;if(i.reflectToAttribute){const e=s.get(t);!1===r?this.removeAttribute(e):n===Boolean?this.setAttribute(e,""):this.setAttribute(e,r)}}}}),PropertyDefault=Mixin(t=>{const e=PropertyChanged(t);return class extends e{connectedCallback(){super.connectedCallback();const t=this.constructor.properties;if(void 0===t)return;const e=Object.keys(t),s={};for(const r of e){if(null!=this[r])continue;const e=t[r];null!=e.default&&(s[r]=e.default())}this.set(s)}}}),Properties=Mixin(t=>{const e=PropertyDefault(PropertyReflection(PropertyObserver(PropertyChanged(t))));return class extends e{}}),Control=Mixin(t=>{const e=Properties(Base(t)),s=Symbol(),r=Symbol();return class extends e{static get properties(){return Object.assign({},super.properties,{role:{type:String,reflectToAttribute:!0},name:{type:String,reflectToAttribute:!0},value:{type:String,reflectToAttribute:!0,observer:s},required:{type:Boolean,reflectToAttribute:!0,observer:r}})}constructor(){super(),this.required=!1}get valid(){return null!=this.value||!this.required}[s](t,e){t!==e&&(this.setAttribute("aria-invalid",!this.valid),this.toggleAttribute("valid",this.valid))}[r](t,e){t!==e&&(this.setAttribute("aria-required",t),this.setAttribute("aria-invalid",!this.valid),this.toggleAttribute("valid",this.valid))}}}),Focus=Mixin(t=>{const e=Properties(Base(t)),s=Symbol();return class extends e{static get properties(){return Object.assign({},super.properties,{disabled:{type:Boolean,reflectToAttribute:!0,observer:s},focused:{type:Boolean,reflectToAttribute:!0}})}constructor(){super(),this.focused=!1,this.disabled=!1}[s](t,e){t!==e&&(this.setAttribute("aria-disabled",String(t)),t?(this.removeAttribute("tabindex"),this.blur()):this.setAttribute("tabindex","0"))}focus(){this.disabled||(super.focus(),this.focused=!0,this.dispatchEvent(new FocusEvent("focus")),this.dispatchEvent(new FocusEvent("focusin",{bubbles:!0})))}blur(){this.disabled||(super.blur(),this.focused=!1,this.dispatchEvent(new FocusEvent("blur")),this.dispatchEvent(new FocusEvent("focusout",{bubbles:!0})))}}}),StaticTemplate=Mixin(t=>{const e=new WeakSet;return class extends t{connectedCallback(){const t=this.constructor.template;if(null!=t&&!e.has(this)){null==this.shadowRoot&&this.attachShadow({mode:"open"});const s=t.content.cloneNode(!0);this.shadowRoot.appendChild(s),e.add(this)}super.connectedCallback&&super.connectedCallback()}}});function sanitize(t){return t instanceof HTMLTemplateElement?t.innerHTML:String(t)}function html(t,...e){const s=t.raw,r=document.createElement("template");return r.innerHTML=e.reduce((t,e,r)=>t+sanitize(e)+s[r+1],s[0]),r}const ShadyTemplate=Mixin(t=>{const e=StaticTemplate(t),s=new WeakSet,r=window.ShadyCSS,i=r&&(!r.nativeShadow||!r.nativeCss);return class extends e{static prepareTemplate(t){i&&null!=this.template&&(s.has(this)||(r.prepareTemplate(this.template,t),s.add(this)))}constructor(){super();const t=this.localName.toLowerCase();this.constructor.prepareTemplate(t)}connectedCallback(){super.connectedCallback(),i&&r.styleElement(this)}}}),Toggle=Mixin(t=>{const e=Properties(Base(t)),s=Symbol(),r=Symbol(),i=Symbol();return class extends e{static get properties(){return Object.assign({},super.properties,{checked:{type:Boolean,reflectToAttribute:!0,observer:i}})}constructor(){super(),this.checked=!1,this[s]=this[s].bind(this),this[r]=this[r].bind(this)}[i](t,e){t!==e&&(this.setAttribute("aria-checked",String(t)),this.dispatchEvent(new Event("input",{bubbles:!0})))}connectedCallback(){this.addEventListener("click",this[s]),this.addEventListener("keydown",this[r]),super.connectedCallback&&super.connectedCallback()}toggle(){this.disabled||(this.checked=!this.checked)}[s](){this.disabled||(this.toggle(),this.dispatchEvent(new Event("change",{bubbles:!0})))}[r](t){if(!this.disabled)switch(t.key){case"Enter":case" ":this.toggle(),this.dispatchEvent(new Event("change",{bubbles:!0}));break;default:return}}}});export{Attributes,Attributes as AttributesMixin,Base,Base as BaseMixin,connector,Control,Control as ControlMixin,Focus,Focus as FocusMixin,Properties,Properties as PropertiesMixin,PropertyChanged,PropertyChanged as PropertyChangedMixin,PropertyDefault,PropertyDefault as PropertyDefaultMixin,PropertyObserver,PropertyObserver as PropertyObserverMixin,PropertyReflection,PropertyReflection as PropertyReflectionMixin,ShadyTemplate,ShadyTemplate as ShadyTemplateMixin,StaticTemplate,html,StaticTemplate as StaticTemplateMixin,Toggle,Toggle as ToggleMixin};
