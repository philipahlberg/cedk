{"version":3,"file":"index.min.js","sources":["../src/utils.js","../src/attribute-mixin.js","../src/connector.js","../src/focus-mixin.js","../src/minimal-mixin.js","../src/properties-mixin.js","../src/static-template-mixin.js","../src/shady-template-mixin.js"],"sourcesContent":["export function toDashCase(str) {\r\n  return str.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\r\n}\r\n\r\nexport function toCamelCase(str) {\r\n  return str.replace(/-([a-z])/ig, (m) => m[1].toUpperCase());\r\n}\r\n\r\nexport function isBoolean(value) {\r\n  return value != null && (value === 'false' || value === 'true' || typeof value === 'boolean');\r\n}\r\n\r\nexport function toBoolean(value) {\r\n  return value !== 'false' && Boolean(value);\r\n}\r\n\r\nexport function has(target, prop) {\r\n  return target.hasOwnProperty(prop);\r\n}\r\n\r\nexport function empty() {\r\n  return Object.create(null);\r\n}\r\n\r\nexport function freeze(object) {\r\n  return Object.freeze(object);\r\n}\r\n\r\nexport const EMPTY = freeze(empty());","import { toDashCase } from './utils.js';\r\n\r\nfunction getter(type, key) {\r\n  switch (type) {\r\n    case String:\r\n      return function() {\r\n        return this.getAttribute(key);\r\n      };\r\n    case Boolean:\r\n      return function() {\r\n        return this.hasAttribute(key);\r\n      };\r\n    case Number:\r\n      return function() {\r\n        return Number(this.getAttribute(key));\r\n      };\r\n  }\r\n}\r\n\r\nfunction setter(type, key) {\r\n  switch (type) {\r\n    case String:\r\n    case Number:\r\n      return function(v) {\r\n        this.setAttribute(key, v);\r\n      };\r\n    case Boolean:\r\n      return function(v) {\r\n        this.toggleAttribute(key, v);\r\n      };\r\n  }\r\n}\r\n\r\nconst finalized = new WeakSet();\r\n\r\n/**\r\n * A very simple mixin for synchronizing primitive properties with attributes.\r\n * Maps `camelCase` properties to `dash-case` attributes.\r\n * `String` property values map directly to attribute values.\r\n * `Boolean` property values toggle the existence of attributes.\r\n * `Number` property values are coerced with `Number()`.\r\n * Note: This mixin prohibits the use of `PropertiesMixin`.\r\n */\r\nexport const AttributeMixin = (SuperClass) => (class AttributeElement extends SuperClass {\r\n  constructor() {\r\n    super();\r\n    const ctor = this.constructor;\r\n    if (finalized.has(ctor) || !ctor.hasOwnProperty('properties')) {\r\n      return;\r\n    }\r\n\r\n    const properties = ctor.properties;\r\n    const prototype = ctor.prototype;\r\n    for (const key in properties) {\r\n      const { type, reflect } = properties[key];\r\n      if (reflect) {\r\n        const attribute = toDashCase(key);\r\n        Object.defineProperty(prototype, key, {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: getter(type, attribute),\r\n          set: setter(type, attribute)\r\n        });\r\n      }\r\n    }\r\n\r\n    finalized.add(ctor);\r\n  }\r\n\r\n  /**\r\n   * Toggle an attribute.\r\n   * @param {String} name name of the attribute to toggle.\r\n   * @param {Boolean} predicate decides whether to set or remove the attribute.\r\n   */\r\n  toggleAttribute(name, predicate) {\r\n    if (predicate != null) {\r\n      if (predicate) {\r\n        this.setAttribute(name, '');\r\n      } else {\r\n        this.removeAttribute(name);\r\n      }\r\n    } else {\r\n      if (this.hasAttribute(name)) {\r\n        this.removeAttribute(name);\r\n      } else {\r\n        this.setAttribute(name, '');\r\n      }\r\n    }\r\n  }\r\n});\r\n","const subscriptions = new WeakMap();\r\n\r\nexport const connector = (store) => (\r\n  (Element, map) => class extends Element {\r\n    connectedCallback() {\r\n      const { selectors, actions } = map;\r\n\r\n      if (selectors) {\r\n        const update = () => Object.assign(\r\n          this,\r\n          selectors(store.getState())\r\n        );\r\n        subscriptions.set(this, store.subscribe(update));\r\n        update();\r\n      }\r\n\r\n      if (actions) {\r\n        const dispatchers = actions(store.dispatch);\r\n        for (const type in dispatchers) {\r\n          this.addEventListener(type, event => {\r\n            event.stopImmediatePropagation();\r\n            dispatchers[type](event.detail);\r\n          });\r\n        }\r\n      }\r\n\r\n      if (super.connectedCallback) {\r\n        super.connectedCallback();\r\n      }\r\n     }\r\n\r\n    disconnectedCallback() {\r\n      if (map.selectors) {\r\n        const unsubscribe = subscriptions.get(this);\r\n        unsubscribe();\r\n      }\r\n      if (super.disconnectedCallback) {\r\n        super.disconnectedCallback();\r\n      }\r\n    }\r\n  }\r\n);\r\n","export const FocusMixin = (SuperClass) => (class FocusableElement extends SuperClass {\r\n  static get observedAttributes() {\r\n    return (super.observedAttributes || []).concat(['disabled']);\r\n  }\r\n\r\n  set disabled(v) {\r\n    if (v) {\r\n      this.setAttribute('disabled', '');\r\n    } else {\r\n      this.removeAttribute('disabled');\r\n    }\r\n  }\r\n\r\n  get disabled() {\r\n    return this.hasAttribute('disabled');\r\n  }\r\n\r\n  set focused(v) {\r\n    if (v) {\r\n      this.setAttribute('focused', '');\r\n    } else {\r\n      this.removeAttribute('focused');\r\n    }\r\n  }\r\n\r\n  get focused() {\r\n    return this.hasAttribute('focused');\r\n  }\r\n\r\n  attributeChangedCallback(attr, oldValue, newValue) {\r\n    if (attr === 'disabled') {\r\n      const hasValue = newValue != null;\r\n      this.setAttribute('aria-disabled', hasValue);\r\n      if (hasValue) {\r\n        // Remove attribute entirely to ensure that the\r\n        // element is no longer focusable\r\n        this.removeAttribute('tabindex');\r\n        this.blur();\r\n      } else {\r\n        this.setAttribute('tabindex', '0');\r\n      }\r\n    }\r\n\r\n    if (super.attributeChangedCallback) {\r\n      super.attributeChangedCallback(attr, oldValue, newValue);\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.addEventListener('focus', this.onFocus.bind(this));\r\n    this.addEventListener('blur', this.onBlur.bind(this));\r\n\r\n    if (!this.hasAttribute('tabindex') && !this.disabled) {\r\n      this.setAttribute('tabindex', '0');\r\n    }\r\n\r\n    if (super.connectedCallback) {\r\n      super.connectedCallback();\r\n    }\r\n  }\r\n\r\n  focus() {\r\n    super.focus();\r\n    if (!this.disabled) {\r\n      this.dispatchEvent(new Event('focus'));\r\n    }\r\n  }\r\n\r\n  onFocus(event) {\r\n    this.focused = true;\r\n  }\r\n\r\n  blur() {\r\n    super.blur();\r\n    this.dispatchEvent(new Event('blur'));\r\n  }\r\n\r\n  onBlur(event) {\r\n    this.focused = false;\r\n  }\r\n});\r\n","export const MinimalMixin = (SuperClass) => class MinimalElement extends SuperClass {\r\n  /**\r\n   * Convenience function for emitting a custom event.\r\n   * @param {string} type \r\n   * @param {*} detail \r\n   * @param {CustomEventInit} options \r\n   */\r\n  emit(type, detail, options) {\r\n    const init = Object.assign({\r\n      bubbles: true,\r\n      cancelable: true,\r\n      detail\r\n    }, options);\r\n    return this.dispatchEvent(new CustomEvent(type, init));\r\n  }\r\n\r\n  /**\r\n   * Toggle an attribute.\r\n   * @param {String} name name of the attribute to toggle.\r\n   * @param {Boolean} predicate decides whether to set or remove the attribute.\r\n   */\r\n  toggleAttribute(name, predicate) {\r\n    if (predicate != null) {\r\n      if (predicate) {\r\n        this.setAttribute(name, '');\r\n      } else {\r\n        this.removeAttribute(name);\r\n      }\r\n    } else {\r\n      if (this.hasAttribute(name)) {\r\n        this.removeAttribute(name);\r\n      } else {\r\n        this.setAttribute(name, '');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { toDashCase, toCamelCase, has, empty } from './utils.js';\r\n\r\nfunction isPrimitive(type) {\r\n  switch (type) {\r\n    case String:\r\n    case Number:\r\n    case Boolean:\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nconst finalized = new WeakSet();\r\nconst properties = new WeakMap();\r\nconst observers = new WeakMap();\r\nconst batches = new WeakMap();\r\n\r\nfunction setter(key) {\r\n  return function(newValue) {\r\n    const oldValue = properties.get(this)[key];\r\n    properties.get(this)[key] = newValue;\r\n    const obs = observers.get(this.constructor)[key];\r\n    const len = obs.length;\r\n    for (let i = 0; i < len; i++) {\r\n      obs[i].call(this, key, oldValue, newValue);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getter(key) {\r\n  return function() {\r\n    return properties.get(this)[key];\r\n  }\r\n}\r\n\r\nfunction reflector(type, attributeName) {\r\n  switch (type) {\r\n    case Number:\r\n    case String:\r\n      return function(_, __, newValue) {\r\n        this.setAttribute(attributeName, newValue);\r\n      }\r\n    case Boolean:\r\n      return function(_, __, newValue) {\r\n        if (newValue) {\r\n          this.setAttribute(attributeName, '');\r\n        } else {\r\n          this.removeAttribute(attributeName);\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nfunction propertyChanged(key, oldValue, newValue) {\r\n  this.propertyChangedCallback(key, oldValue, newValue);\r\n}\r\n\r\nexport const PropertiesMixin = (SuperClass) => (class PropertiesElement extends SuperClass {\r\n  static get observedAttributes() {\r\n    const props = this.properties;\r\n    return props ? Object.entries(props)\r\n      .filter(([prop, opts]) => isPrimitive(opts.type))\r\n      .map(([prop, opts]) => toDashCase(prop)) : [];\r\n  }\r\n\r\n  static setup() {\r\n    if (finalized.has(this)) {\r\n      return;\r\n    }\r\n\r\n    observers.set(this, empty());\r\n    this.mappedAttributes = new Set();\r\n\r\n    for (const key in this.properties) {\r\n      Object.defineProperty(this.prototype, key, {\r\n        configurable: true,\r\n        enumerable: true,\r\n        get: getter(key),\r\n        set: setter(key)\r\n      });\r\n\r\n      const { type, reflect, observe } = this.properties[key];\r\n\r\n      const obs = observers.get(this)[key] = [];\r\n      if (observe) {\r\n        obs.push(propertyChanged);\r\n      }\r\n\r\n      if (reflect) {\r\n        const attributeName = toDashCase(key);\r\n        this.mappedAttributes.add(attributeName);\r\n        obs.push(reflector(type, attributeName));\r\n      }\r\n    }\r\n\r\n    finalized.add(this);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.constructor.setup();\r\n    properties.set(this, empty());\r\n    batches.set(this, empty());\r\n  }\r\n\r\n  connectedCallback() {\r\n    const constructor = this.constructor;\r\n    if (!has(constructor, 'properties')) {\r\n      return;\r\n    }\r\n\r\n    const options = constructor.properties;\r\n    for (const key in options) {\r\n      const { type, required } = options[key];\r\n      let absent = this[key] == null;\r\n      let value;\r\n\r\n      // Attempt to read from attribute if absent\r\n      const attributeName = toDashCase(key);\r\n      if (absent && this.hasAttribute(attributeName)) {\r\n        const raw = this.getAttribute(attributeName);\r\n        this.removeAttribute(attributeName);\r\n\r\n        switch (type) {\r\n          case String:\r\n            value = raw;\r\n            break;\r\n          case Number:\r\n            value = Number(raw);\r\n            break;\r\n          case Boolean:\r\n            value = raw != null;\r\n            break;\r\n          default:\r\n            value = JSON.parse(raw);\r\n            break;\r\n        }\r\n\r\n        absent = value == null;\r\n        if (!absent) {\r\n          this[key] = value;\r\n        }\r\n      }\r\n\r\n      // if (still) absent, apply default value\r\n      if (absent && has(options[key], 'default')) {\r\n        this[key] = options[key].default.call(this);\r\n      } else if (required) {\r\n        console.warn(`Required property '${key}' was not passed down to`, this);\r\n      }\r\n    }\r\n\r\n    if (super.connectedCallback) {\r\n      super.connectedCallback();\r\n    }\r\n  }\r\n\r\n  attributeChangedCallback(attr, oldValue, newValue) {\r\n    if (\r\n      this.constructor.mappedAttributes.has(attr) &&\r\n      oldValue !== newValue\r\n    ) {\r\n      const prop = toCamelCase(attr);\r\n      const options = this.constructor.properties;\r\n      const type = options[prop] && options[prop].type || String;\r\n      const old = properties.get(this)[prop];\r\n      let updated;\r\n      switch (type) {\r\n        case String:\r\n          updated = newValue;\r\n          break;\r\n        case Number:\r\n          updated = Number(newValue);\r\n          break;\r\n        case Boolean:\r\n          updated = newValue != null;\r\n          break;\r\n      }\r\n\r\n      properties.get(this)[prop] = updated;\r\n      this.propertyChangedCallback(prop, old, updated);\r\n    }\r\n\r\n    if (super.attributeChangedCallback) {\r\n      super.attributeChangedCallback(attr, oldValue, newValue);\r\n    }\r\n  }\r\n\r\n  propertyChangedCallback(name, oldValue, newValue) {\r\n    clearTimeout(this._debouncer);\r\n    const batch = batches.get(this);\r\n    batch[name] = {\r\n      name,\r\n      oldValue,\r\n      newValue\r\n    };\r\n    this._debouncer = setTimeout(() => {\r\n      this.propertiesChangedCallback(batch);\r\n      batches.set(this, empty());\r\n    }, 1);\r\n  }\r\n\r\n  propertiesChangedCallback(changes) {}\r\n\r\n  flushPropertyChanges() {\r\n    clearTimeout(this._debouncer);\r\n    this.propertiesChangedCallback(batches.get(this));\r\n    batches.set(this, empty());\r\n  }\r\n});\r\n","export const StaticTemplateMixin = (SuperClass) => (class StaticTemplateElement extends SuperClass {\r\n  constructor() {\r\n    super();\r\n    if (this.constructor.hasOwnProperty('template')) {\r\n      this.attachShadow({ mode: 'open' });\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    const ctor = this.constructor;\r\n    if (ctor.hasOwnProperty('template')) {\r\n      const template = ctor.template.content;\r\n      this.shadowRoot.appendChild(template.cloneNode(true));\r\n    }\r\n\r\n    if (super.connectedCallback) {\r\n      super.connectedCallback();\r\n    }\r\n  }\r\n});\r\n\r\n/**\r\n * @param {*} value Object to stringify into HTML\r\n * @return {string} HTML stringified form of `obj`\r\n */\r\nfunction sanitize(value) {\r\n  if (value instanceof HTMLTemplateElement) {\r\n    return value.innerHTML;\r\n  } else {\r\n    return String(value);\r\n  }\r\n}\r\n\r\n/**\r\n * A template literal tag that creates an HTML <template> element from the contents of the string.\r\n * @param {Array<string>} strings Constant parts of tagged template literal\r\n * @param {...*} values Variable parts of tagged template literal\r\n * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement\r\n */\r\nexport function html(strings, ...values) {\r\n  const rawStrings = strings.raw;\r\n  const template = document.createElement('template');\r\n  template.innerHTML = values.reduce((acc, v, idx) =>\r\n    acc + sanitize(v) + rawStrings[idx + 1], rawStrings[0]);\r\n  return template;\r\n}\r\n","import { StaticTemplateMixin } from './static-template-mixin.js';\r\n\r\nconst ShadyCSS = window.ShadyCSS;\r\nconst emulated = ShadyCSS != null && (\r\n  !ShadyCSS.nativeShadow ||\r\n  !ShadyCSS.nativeCss\r\n);\r\n\r\nconst finalized = new WeakSet();\r\n\r\nexport const ShadyTemplateMixin = (SuperClass) => {\r\n  const Base = StaticTemplateMixin(SuperClass);\r\n  return class ShadyTemplateElement extends Base {\r\n    constructor() {\r\n      super();\r\n      const ctor = this.constructor;\r\n      if (!ctor.template || finalized.has(ctor)) {\r\n        return;\r\n      }\r\n\r\n      if (emulated) {\r\n        ShadyCSS.prepareTemplate(ctor.template, this.localName);\r\n      }\r\n\r\n      finalized.add(ctor);\r\n    }\r\n\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n      if (finalized.has(this.constructor)) {\r\n        if (emulated) {\r\n          ShadyCSS.styleElement(this);\r\n        }\r\n      }\r\n\r\n      if (super.connectedCallback) {\r\n        super.connectedCallback();\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["toDashCase","str","replace","toLowerCase","toCamelCase","m","toUpperCase","has","target","prop","hasOwnProperty","empty","Object","create","freeze","object","EMPTY","type","String","this","getAttribute","key","Boolean","hasAttribute","Number","setter","v","setAttribute","toggleAttribute","finalized","WeakSet","AttributeMixin","SuperClass","[object Object]","super","ctor","constructor","properties","prototype","reflect","attribute","defineProperty","configurable","enumerable","get","getter","set","add","name","predicate","removeAttribute","subscriptions","WeakMap","connector","store","Element","map","selectors","actions","update","assign","getState","subscribe","dispatchers","dispatch","addEventListener","event","stopImmediatePropagation","detail","connectedCallback","unsubscribe","disconnectedCallback","FocusMixin","observedAttributes","concat","disabled","focused","attr","oldValue","newValue","hasValue","blur","attributeChangedCallback","onFocus","bind","onBlur","focus","dispatchEvent","Event","MinimalMixin","options","init","bubbles","cancelable","CustomEvent","isPrimitive","observers","batches","obs","len","length","i","call","reflector","attributeName","_","__","propertyChanged","propertyChangedCallback","PropertiesMixin","props","entries","filter","opts","mappedAttributes","Set","observe","push","setup","required","value","absent","raw","JSON","parse","default","console","warn","old","updated","clearTimeout","_debouncer","batch","setTimeout","propertiesChangedCallback","changes","StaticTemplateMixin","attachShadow","mode","template","content","shadowRoot","appendChild","cloneNode","sanitize","HTMLTemplateElement","innerHTML","html","strings","values","rawStrings","document","createElement","reduce","acc","idx","ShadyCSS","window","emulated","nativeShadow","nativeCss","ShadyTemplateMixin","Base","prepareTemplate","localName","styleElement"],"mappings":"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"}